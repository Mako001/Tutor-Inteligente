'use server';
/**
 * @fileOverview This file defines a Genkit flow for refining an activity proposal based on teacher feedback.
 *
 * - refineActivityProposal - A function that refines the activity proposal.
 * - RefineActivityProposalInput - The input type for the refineActivityProposal function.
 * - RefineActivityProposalOutput - The return type for the refineActivityProposal function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const RefineActivityProposalInputSchema = z.object({
  initialProposal: z
    .string()
    .describe('The initial activity proposal generated by the AI.'),
  teacherFeedback: z
    .string()
    .describe(
      'Feedback from the teacher to refine the activity proposal, including specific instructions or areas for improvement.'
    ),
});
export type RefineActivityProposalInput = z.infer<
  typeof RefineActivityProposalInputSchema
>;

const RefineActivityProposalOutputSchema = z.object({
  refinedProposal: z
    .string()
    .describe('The refined activity proposal based on the teacher feedback.'),
});
export type RefineActivityProposalOutput = z.infer<
  typeof RefineActivityProposalOutputSchema
>;

export async function refineActivityProposal(
  input: RefineActivityProposalInput
): Promise<RefineActivityProposalOutput> {
  return refineActivityProposalFlow(input);
}

const prompt = ai.definePrompt({
  name: 'refineActivityProposalPrompt',
  input: {
    schema: z.object({
      initialProposal: z
        .string()
        .describe('The initial activity proposal generated by the AI.'),
      teacherFeedback: z
        .string()
        .describe(
          'Feedback from the teacher to refine the activity proposal, including specific instructions or areas for improvement.'
        ),
    }),
  },
  output: {
    schema: z.object({
      refinedProposal: z
        .string()
        .describe('The refined activity proposal based on the teacher feedback.'),
    }),
  },
  prompt: `You are an expert in refining activity proposals for teachers.

  Based on the initial activity proposal and the teacher's feedback, refine the proposal to better meet the teacher's needs.
  The proposal must be contextualized to Colombia.
  Do not deviate from the guidelines of the Ministry of Education of Colombia.

  Initial Activity Proposal:
  {{initialProposal}}

  Teacher Feedback:
  {{teacherFeedback}}

  Refined Activity Proposal:`,
});

const refineActivityProposalFlow = ai.defineFlow<
  typeof RefineActivityProposalInputSchema,
  typeof RefineActivityProposalOutputSchema
>(
  {
    name: 'refineActivityProposalFlow',
    inputSchema: RefineActivityProposalInputSchema,
    outputSchema: RefineActivityProposalOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return {refinedProposal: output!.refinedProposal!};
  }
);
