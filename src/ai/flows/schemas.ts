// src/ai/flows/schemas.ts
// This file does NOT have 'use server' and can be safely imported by clients and servers.
import {z} from 'zod';

// Schema for generating a single, modular activity
export const GenerateSingleActivityInputSchema = z.object({
  subject: z.string().describe('The subject or area of knowledge for the activity.'),
  grade: z.string().describe('The specific grade(s) for the activity.'),
  topic: z.string().optional().describe('The broader lesson topic this activity belongs to (optional).'),
  activityType: z.string().describe('The type of activity (e.g., Introduction, Practice, Evaluation, Icebreaker).'),
  duration: z.string().describe('The estimated duration of the activity (e.g., 15 minutes, 1 class period).'),
  learningObjective: z.string().describe('The specific learning objective for this single activity.'),
  availableResources: z.string().optional().describe('Specific resources available for this activity.'),
});
export type GenerateSingleActivityInput = z.infer<typeof GenerateSingleActivityInputSchema>;


// Schemas for GenerateActivityProposal
export const GenerateActivityProposalInputSchema = z.object({
  subject: z.string().describe('The subject or area of knowledge for the activity (e.g., "Tecnología e Informática", "Matemáticas", "Ciencias Naturales").'),
  grade: z.string().describe('The specific grade(s) for the activity (e.g., 6th, 7th, or both).'),
  timeAvailable: z.string().describe('The time available for the activity (e.g., one class, two classes, a week).'),
  centralTheme: z.string().describe('The central theme or specific problem to be addressed in the activity.'),
  methodologyPreference: z
    .string()
    .describe('The preferred methodology or pedagogical approach for the activity (or "Abierto a sugerencias").'),
  competenciesToDevelop: z
    .string()
    .describe(
      'The specific competencies that the activity will develop. Be as specific as possible and cite them if possible.'
    ),
  learningEvidences: z
    .string()
    .describe(
      'The specific learning evidences (actions, products, performances) that will verify the development of competencies. Be as specific as possible.'
    ),
  curricularComponents: z
    .string()
    .describe(
      'The curricular components to be addressed in the activity, with justification.'
    ),
  availableResources: z.string().describe('The available resources for the activity (e.g., computers, internet, software).'),
  contextAndNeeds: z
    .string()
    .describe('Any specific needs or particularities of the school context or students that should be considered.'),
  interdisciplinarity: z
    .string()
    .describe('Whether the activity should be integrated with other areas of knowledge, and if so, which ones.'),
});
export type GenerateActivityProposalInput = z.infer<typeof GenerateActivityProposalInputSchema>;


// Schemas for RefineActivityProposal
export const RefineActivityProposalInputSchema = z.object({
  initialProposal: z
    .string()
    .describe('The initial activity proposal generated by the AI.'),
  teacherFeedback: z
    .string()
    .describe(
      'Feedback from the teacher to refine the activity proposal, including specific instructions or areas for improvement.'
    ),
});
export type RefineActivityProposalInput = z.infer<
  typeof RefineActivityProposalInputSchema
>;
